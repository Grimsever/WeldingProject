// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeldingAnalyz.Data.Context;

namespace WeldingAnalyz.Data.Migrations
{
    [DbContext(typeof(WeldingContext))]
    partial class WeldingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Amperage", b =>
                {
                    b.Property<int>("AmperageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineDataId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("AmperageId");

                    b.HasIndex("MachineDataId");

                    b.ToTable("Amperages");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Foreman", b =>
                {
                    b.Property<int>("ForemanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ForemanId");

                    b.ToTable("Foremans");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Machine", b =>
                {
                    b.Property<int>("MachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineDataId")
                        .HasColumnType("int");

                    b.Property<string>("MachineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("MachineId");

                    b.HasIndex("MachineDataId")
                        .IsUnique();

                    b.HasIndex("TaskId")
                        .IsUnique();

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.MachineData", b =>
                {
                    b.Property<int>("MachineDataId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.HasKey("MachineDataId");

                    b.ToTable("MachineDatas");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Task", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineId")
                        .HasColumnType("int");

                    b.Property<int>("TechnologicalMapId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.HasIndex("WorkerId")
                        .IsUnique();

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.TechnologicalMap", b =>
                {
                    b.Property<int>("TechnologicalMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmperageMax")
                        .HasColumnType("float");

                    b.Property<double>("AmperageMin")
                        .HasColumnType("float");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.Property<double>("VoltageMax")
                        .HasColumnType("float");

                    b.Property<double>("VoltageMin")
                        .HasColumnType("float");

                    b.HasKey("TechnologicalMapId");

                    b.HasIndex("TaskId")
                        .IsUnique()
                        .HasFilter("[TaskId] IS NOT NULL");

                    b.ToTable("TechnologicalMaps");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Voltage", b =>
                {
                    b.Property<int>("VoltageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MachineDataId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("VoltageId");

                    b.HasIndex("MachineDataId");

                    b.ToTable("Voltages");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Worker", b =>
                {
                    b.Property<int>("WorkerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ForemanId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("WorkerID");

                    b.HasIndex("ForemanId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Amperage", b =>
                {
                    b.HasOne("WeldingAnalyz.DAL.Models.MachineData", "MachineData")
                        .WithMany("Amperages")
                        .HasForeignKey("MachineDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Machine", b =>
                {
                    b.HasOne("WeldingAnalyz.DAL.Models.MachineData", "MachineData")
                        .WithOne("Machine")
                        .HasForeignKey("WeldingAnalyz.DAL.Models.Machine", "MachineDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeldingAnalyz.DAL.Models.Task", "Task")
                        .WithOne("Machine")
                        .HasForeignKey("WeldingAnalyz.DAL.Models.Machine", "TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Task", b =>
                {
                    b.HasOne("WeldingAnalyz.DAL.Models.Worker", "Worker")
                        .WithOne("Task")
                        .HasForeignKey("WeldingAnalyz.DAL.Models.Task", "WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.TechnologicalMap", b =>
                {
                    b.HasOne("WeldingAnalyz.DAL.Models.Task", "Task")
                        .WithOne("TechnologicalMap")
                        .HasForeignKey("WeldingAnalyz.DAL.Models.TechnologicalMap", "TaskId");
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Voltage", b =>
                {
                    b.HasOne("WeldingAnalyz.DAL.Models.MachineData", "MachineData")
                        .WithMany("Voltages")
                        .HasForeignKey("MachineDataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WeldingAnalyz.DAL.Models.Worker", b =>
                {
                    b.HasOne("WeldingAnalyz.DAL.Models.Foreman", "Foreman")
                        .WithMany("Workers")
                        .HasForeignKey("ForemanId");
                });
#pragma warning restore 612, 618
        }
    }
}
